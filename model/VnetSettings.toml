[pytorch]

    p = 0.35

    dense_layers = [128]
    dropout = 0.0
    balance = -1
    batch_size = 512
    epochs = 2
    optimizer  = 'adam'

    # why elu? --> https://arxiv.org/pdf/1511.07289.pdf
    hidden_activations = 'elu'    # 'relu
    output_activation = 'softmax'
    loss = 'crossentropy'
    metrics = ['sparse_categorical_accuracy']

    learning_rate = 1.0e-4

    kernel_sizes  = [[3, 3], [3, 3], [1, 3], [1, 3], [1, 3]]
    pad_sizes     = [[1, 1], [1, 1], [0, 1], [0, 1], [0, 1]]
    stride_sizes  = [[1, 2], [1, 2], [1, 2], [2, 2], [1, 2]]
    num_filters   = [16, 32, 64, 128, 256]



# define normalization boundaries and conversion for radar (feature) and lidar (label) space
[feature]
    [feature.Spec]
        use = true
        add_flipped = false
        var_lims = [1.0e-5, 1.0e2]
        var_converter= 'lin2z'
        scaling = 'normalize'  # minmaxscaler, normalize
        despeckle2D = true          # 2D convolution (5x5 window), removes single non-zero values,
        main_peak = true            #
        ghost_echo_1 = false         # reduces the domain (Nyquist velocitdy) by Â± 2.5 [m/s], when signal > 0 [dBZ] within 200m above antenna
        ghost_echo_2 = true         #
        dealiasing = false         #
        add_horizontal_channel = true
        spectra_debug_ql = false
